basePath: /
definitions:
  server.LoginPassword:
    properties:
      login:
        type: string
      password:
        type: string
      public_key:
        type: string
    type: object
  storage.Cards:
    properties:
      created:
        type: string
      lablel:
        type: string
      updated:
        type: string
      value:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: mag-nat1@yandex.ru
    name: API Support
  title: GophKeeper API
  version: "1.0"
paths:
  /api/cards/{id}:
    delete:
      parameters:
      - description: Токен авторизации
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: Инфорация удалена
        "400":
          description: Ошибка шифрования
        "401":
          description: Пользователь не авторизован
        "404":
          description: Карта не найдена
        "500":
          description: Внутренняя ошибка сервиса.
      security:
      - ApiKeyAuth: []
      summary: Удаление информации о карте пользователя.
      tags:
      - Карты
    post:
      parameters:
      - description: Public key
        in: body
        name: order
        required: true
        schema:
          type: string
      - description: Токен авторизации
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: Инфорация об одной карте пользователя
        "400":
          description: Ошибка шифрования
        "401":
          description: Пользователь не авторизован
        "404":
          description: Карта не найдена
        "500":
          description: Внутренняя ошибка сервиса.
      security:
      - ApiKeyAuth: []
      summary: Запрос информации о карте пользователя.
      tags:
      - Карты
  /api/cards/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные о карте. Value должно шифроваться на стороне клиента
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/storage.Cards'
      - description: Токен авторизации
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: Информация о карточке успешно сохранена
        "400":
          description: Ошибка при расшифровке тела запроса
        "401":
          description: Пользователь не авторизован
        "409":
          description: Дублирование метаданных карточки
        "422":
          description: Ошибка при конвертации json
        "500":
          description: Внутренняя ошибка сервиса.
      security:
      - ApiKeyAuth: []
      summary: Добавление информации о карте. Шифрование открытым ключём сервера.
      tags:
      - Карты
  /api/cards/edit:
    put:
      consumes:
      - application/json
      parameters:
      - description: Данные о карте. Value должно шифроваться на стороне клиента
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/storage.Cards'
      - description: Токен авторизации
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: Информация о карточке успешно обновлена
        "400":
          description: Ошибка при расшифровке тела запроса
        "401":
          description: Пользователь не авторизован
        "422":
          description: Ошибка при конвертации json
        "500":
          description: Внутренняя ошибка сервиса.
      security:
      - ApiKeyAuth: []
      summary: Редактирование информации о карте. Шифрование открытым ключём сервера.
      tags:
      - Карты
  /api/cards/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Public key
        in: body
        name: order
        required: true
        schema:
          type: string
      - description: Токен авторизации
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: Список файлов пользователя
        "400":
          description: Ошибка шифрования
        "401":
          description: Пользователь не авторизован
        "500":
          description: Внутренняя ошибка сервиса.
      security:
      - ApiKeyAuth: []
      summary: Запрос списка файлов пользователя. Шифрование ответа открытым ключём
        клиента.
      tags:
      - Файлы
  /api/files/add:
    get:
      parameters:
      - description: File id
        in: query
        name: fid
        required: true
        type: integer
      - description: Токен авторизации
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: Успешно
        "400":
          description: Ошибка в запросе
        "401":
          description: Пользователь не авторизован
        "404":
          description: Файл не найден
        "500":
          description: Внутренняя ошибка сервиса.
      security:
      - ApiKeyAuth: []
      summary: Завершение добавления файла.
      tags:
      - Файлы
    post:
      consumes:
      - application/json
      parameters:
      - description: Токен авторизации
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: Ошибка шифрования
        "401":
          description: Пользователь не авторизован
        "500":
          description: Внутренняя ошибка сервиса.
      security:
      - ApiKeyAuth: []
      summary: Добавление одной части файла.
      tags:
      - Файлы
    put:
      consumes:
      - application/json
      parameters:
      - description: Токен авторизации
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: Идентификатор файла
        "400":
          description: Ошибка шифрования
        "401":
          description: Пользователь не авторизован
        "500":
          description: Внутренняя ошибка сервиса.
      security:
      - ApiKeyAuth: []
      summary: Добавление файла пользователем.
      tags:
      - Файлы
  /api/get/key:
    get:
      responses:
        "200":
          description: Отправка ключа
        "500":
          description: Внутренняя ошибка сервиса
      summary: Запрос открытого ключа сервера
      tags:
      - Авторизация
  /api/user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Логи и пароль пользователя в формате json
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/server.LoginPassword'
      responses:
        "200":
          description: Успешная авторизация
          headers:
            Authorization:
              description: Токен авторизации
              type: string
        "400":
          description: Ошибка при расшифровке тела запроса
        "401":
          description: Логин или пароль не найден
        "422":
          description: Ошибка при конвертации json
        "500":
          description: Внутренняя ошибка сервиса
      summary: Авторизация пользователя в микросервисе. Данные должны быть зашифрованы
        открытым ключём сервера.
      tags:
      - Авторизация
  /api/user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Логин и пароль пользователя в формате json
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/server.LoginPassword'
      responses:
        "200":
          description: Успешная регистрация пользователя
          headers:
            Authorization:
              description: Токен авторизации
              type: string
        "400":
          description: Ошибка при расшифровке тела запроса
        "409":
          description: Такой логин уже используется другим пользователем.
        "422":
          description: Ошибка при конвертации json
        "500":
          description: Внутренняя ошибка сервиса.
      summary: Регистрация нового пользователя. Данные должны быть зашифрованы открытым
        ключём сервера.
      tags:
      - Авторизация
securityDefinitions:
  ApiKeyAuth:
    description: API для сервера менеджера паролей GophKeeper.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
